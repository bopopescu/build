# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.scheduler import Dependent

from common import chromium_utils

from master import gitiles_poller
from master import master_config
from master import master_utils
from master import recipe_master_helper
from master import slaves_list
from master.factory import annotator_factory
from master.factory import chromium_factory

import config
import master_site_config

ActiveMaster = master_site_config.ChromiumGPUFYI

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# Disable compression for the stdio files.
c['logCompressionLimit'] = False

config.DatabaseSetup(c, require_dbconfig=ActiveMaster.is_production_host)

####### CHANGESOURCES

master_poller = gitiles_poller.GitilesPoller(
    'https://chromium.googlesource.com/chromium/src')

c['change_source'] = [master_poller]


####### SLAVES

# Load the slave list. We need some information from it in order to
# produce the builders.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumGPUFYI')


####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.

trigger_name_map = recipe_master_helper.AddSchedulersAndTriggers(
    buildmaster_config=c, slave_list=slaves,
    scheduler_name='gpu', branch='master')

####### BUILDERS

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

m_annotator = annotator_factory.AnnotatorFactory()

# TODO(kbr): rtoy: switch the Audio bots to use recipes too.

# Using src/webkit is necessary for running the layout tests on Windows.
# However, the 'all' project resides in src/build. Thus, build in one place and
# test in another. Thus, it is impossible to build and test on the same Windows
# bot.
m_win = chromium_factory.ChromiumFactory('src/build', 'win32')
m_linux = chromium_factory.ChromiumFactory('src/out', 'linux2')

# Some shortcut to simplify the code below.
F_WIN_AUDIO = m_win.ChromiumFactory
F_LINUX_AUDIO = m_linux.ChromiumFactory

f_win_audio_rel = F_WIN_AUDIO(
    project='all.sln;chromium_builder_tests',
    target='Release',
    slave_type='BuilderTester',
    tests=[
      'content_unittests',
      'media',
    ],
    factory_properties={'gclient_env': {'GYP_DEFINES': 'fastbuild=1'},
                        'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})

f_linux_audio_rel = F_LINUX_AUDIO(
    target='Release',
    slave_type='BuilderTester',
    options=['content_unittests', 'media_unittests'],
    tests=[
      'content_unittests',
      'media',
    ],
    factory_properties={'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})


# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

recipe_master_helper.AddRecipeBasedBuilders(
  c, slaves, m_annotator, trigger_name_map)

b_win_audio = {'name': 'Win7 Audio',
               'factory': f_win_audio_rel}

b_linux_audio = {'name': 'Linux Audio',
                 'factory': f_linux_audio_rel}

# Order them by OS type, target type, and OS version.
c['builders'] += [ b_win_audio, b_linux_audio ]

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)

####### STATUS TARGETS

# Buildbot master url:
# Must come before AutoSetupMaster().
c['buildbotURL'] = ActiveMaster.buildbot_url

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html='../master.chromium/public_html',
    templates=['../master.chromium/templates'],
    tagComparator=master_poller.comparator,
    enable_http_status_push=ActiveMaster.is_production_host)

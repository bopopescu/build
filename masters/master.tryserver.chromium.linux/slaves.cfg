# -*- python -*-
# ex: set syntax=python:
# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.


def expand_extra_builders(extras, total):
  """Spreads each builder's configuration across the slaves so that if a
  continuous block of slaves go missing, it reduces the likelihood that all the
  slaves for a builder configuration are missing.
  """
  extras_expanded = []
  for i in xrange(total):
    index = i % len(extras)
    builders, count = extras[index]
    if count == 1:
      extras.pop(index)
    elif count > 0:
      extras[index][1] -= 1
    extras_expanded.append(builders)
  return extras_expanded


def linux():
  """Linux VMs can hold a maximum of 4 checkouts per slave."""
  # FIXME: Above is wrong according to sergey.

  normal_slaves = range(250, 399) + range(493, 496)
  all_slaves = ['slave%d-c4' % i for i in normal_slaves]
  presubmit_slaves = ['slave%d-c4' % i for i in range(121, 131)]
  # "precise" means "Ubuntu 12.04 'precise'".
  precise_slaves = range(714, 719)
  precise32_slaves = [211]
  linux_arm_testers = [9]

  # Have a dedicated pool for presubmit jobs - all CQ jobs
  # need a presubmit first and so must be responsive.
  presubmit_builders = ['chromium_presubmit', 'blink_presubmit']

  # Configurations on every VM.
  base = presubmit_builders + [
    # One line per shared directory. In decreasing usage:
    'linux_chromium_dbg', 'linux_chromium_rel',
    'linux_chromium_dbg_ng', 'linux_chromium_rel_ng',
    'linux_chromium_compile_dbg', 'linux_chromium_compile_rel',
    'linux_arm_compile',

    'linux_chromium_gn_dbg', 'linux_chromium_gn_rel',
    'linux_chromium_gn_chromeos_rel', 'linux_chromium_gn_chromeos_dbg',
    'android_chromium_gn_compile_dbg',
    'android_chromium_gn_compile_dbg_recipe',
    'android_chromium_gn_compile_rel',
    'android_chromium_gn_compile_rel_recipe',

    'linux_chromium_chromeos_dbg', 'linux_chromium_chromeos_rel',
    'linux_chromium_chromeos_rel_ng',
    'linux_chromium_chromeos_compile_dbg_ng',
    'linux_chromium_chromeos_compile_rel_ng',
    'linux_nacl_sdk_build',
    'linux_nacl_sdk_bionic_build',

    'infra_tester',

    'tools_build_presubmit',
  ]

  # One of the extra configuration per VM.
  # First the ones barely used. By reducing the number of available slaves, we
  # increase the "cache locally" of having a checkout already recent on the
  # slave.
  extras = [
    [['linux_chromeos_asan', 'linux_chromeos_browser_asan'], 6],
    [['linux_nacl_sdk', 'linux_nacl_sdk_bionic'], 3],
    [['linux_ecs_ozone'], 3],
    [['linux_arm'], 3],
    # These ones below are significantly used ones. They use all the remaining
    # slaves.
    [['linux_chromium_chromeos_athena_rel_ng'], -1],
    [['linux_chromium_chromeos_ozone_rel',
      'linux_chromium_chromeos_ozone_dbg'], -1],
    [['linux_chromium_asan_rel', 'linux_chromium_asan_rel_ng'], -1],
    [['linux_layout', 'linux_layout_rel'], -1],
  ]

  extras_expanded = expand_extra_builders(extras, len(all_slaves))

  # Set up normal slaves.
  result = []
  for index, slave in enumerate(all_slaves):
    builders = base + extras_expanded[index]
    result.append({
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': builders,
      'hostname': slave,
    })

  result.extend(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': presubmit_builders,
      'hostname': slave,
    } for slave in presubmit_slaves
  )

  # Add Ubuntu 12.04 'precise' slaves.
  result.extend(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': base,
      'hostname': 'slave%d-c4' % i,
    } for i in precise_slaves
  )

  # Add Ubuntu 12.04 'precise32' slaves.
  result.extend(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '32',
      'builder': 'linux_rel_precise32',
      'hostname': 'vm%d-m4' % i,
    } for i in precise32_slaves
  )

  # This is the Clang-based ThreadSanitizer v2.
  result.append(
   {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_clang_tsan',
      'hostname': 'slave496-c4',
   }
  )

  result.append(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_layout_asan',
      'hostname': 'slave492-c4',
    }
  )

  result.append(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '32',
      'builder': 'linux_layout_rel_32',
      'hostname': 'vm495-m4',
    }
  )

  result.extend(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'quantal',
      'bits': '32',
      'builder': 'linux_arm_tester',
      'hostname': 'build%d-a4' % i,
    } for i in linux_arm_testers
  )

  result.extend([
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'trusty',
      'bits': '64',
      'builder': ['linux_chromium_trusty_dbg', 'linux_chromium_trusty_rel'],
      'hostname': 'build25-a4',
    },
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'trusty',
      'bits': '32',
      'builder': ['linux_chromium_trusty32_dbg', 'linux_chromium_trusty32_rel'],
      'hostname': 'build26-a4',
    },
  ])

  bisect_builder_slaves = [747, 748]
  result.extend(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'bisect_builder',
      'hostname': 'slave%d-c4' % i,
    } for i in bisect_builder_slaves
  )

  linux_32_slaves = [117, 162, 163, 188, 193, 196, 198, 201, 203,
                     227, 260, 338, 786, 787, 788]
  result.extend(
    {
      'master': 'TryServerChromiumLinux',
      'os': 'linux',
      'version': 'precise',
      'bits': '32',
      'builder': ['linux_chromium_compile_dbg_32',
                  'linux_chromium_compile_dbg_32_ng'],
      'hostname': 'vm%d-m4' % i,
    } for i in linux_32_slaves
  )

  return result


def android():
  perf_bisect_builders = [726, 727, 728, 729]
  compile_slaves = [
    {
      'master': 'TryServerChromiumLinux',
      'builder': ['android_clang_dbg', 'android_clang_dbg_recipe',
                  'android_clang_dbg_recipe_experimental',
                  'android_rel',
                  'android_x86_dbg', 'android_x86_dbg_recipe',
                  'android_arm64_dbg_recipe'],
      'hostname': 'slave%d-c4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(101, 121) + range(453, 492) + range(749, 767)
  ]

  test_slaves = [
    {
      'master': 'TryServerChromiumLinux',
      'builder': ['android_dbg_tests_recipe',
                  'android_rel_tests_recipe',
                  'android_fyi_dbg_tests_recipe'],
      'hostname': 'build%d-a4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(100,139+1)
  ]

  aosp_slaves = [
    {
      'master': 'TryServerChromiumLinux',
      'builder': 'android_aosp',
      'hostname': 'slave%d-c4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(520, 540)
  ]

  swarm_dumb_slaves1 = [
    {
      'master': 'TryServerSwarm',
      'hostname': 'slave%d-c4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(540, 550)
  ]

  swarm_dumb_slaves2 = [
    {
      'master': 'TryServerSwarm',
      'hostname': 'swarm%d-c4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(100, 241)
  ]

  return compile_slaves + test_slaves + aosp_slaves + swarm_dumb_slaves1 + \
         swarm_dumb_slaves2


slaves = linux() + android()

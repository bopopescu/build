[
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "config",
      "--spec",
      "cache_dir = None\nsolutions = [{'deps_file': 'DEPS', 'managed': True, 'name': 'src', 'url': 'https://chromium.googlesource.com/chromium/src.git'}]"
    ],
    "name": "gclient setup"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "sync",
      "--nohooks",
      "--force",
      "--verbose",
      "--delete_unversioned_trees",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "name": "gclient sync",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"solutions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 170242@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/skia/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 143121@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@143121@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "config",
      "--local",
      "user.name",
      "Skia DEPS Roller"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "git config user.name"
  },
  {
    "cmd": [
      "git",
      "config",
      "--local",
      "user.email",
      "skia-deps-roller@chromium.org"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "git config user.email"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport urllib2\nimport sys\nwith open(sys.argv[2], 'w') as f:\n  f.write(urllib2.urlopen(sys.argv[1]).read())\n",
      "http://skia-tree-status.appspot.com/arb_is_stopped",
      "/path/to/tmp/json"
    ],
    "name": "is_stopped",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"is_stopped\": true@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import urllib2@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@with open(sys.argv[2], 'w') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@  f.write(urllib2.urlopen(sys.argv[1]).read())@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "Stopped",
      "arb_status.html"
    ],
    "name": "write arb_status.html"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/recipe_modules/gsutil/resources/gsutil_wrapper.py",
      "--",
      "[DEPOT_TOOLS]/gsutil.py",
      "--force-version",
      "3.25",
      "--",
      "cp",
      "-a",
      "public-read",
      "arb_status.html",
      "gs://chromium-skia-gm/arb_status.html"
    ],
    "name": "gsutil upload",
    "~followup_annotations": [
      "@@@STEP_LINK@gsutil.upload@https://storage.cloud.google.com/chromium-skia-gm/arb_status.html@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport json\nimport shlex\nimport subprocess\nimport sys\nimport urllib\nimport urllib2\n\ndef full_hash(short):\n  return subprocess.check_output(['git', 'rev-parse', short]).rstrip()\n\npassword = urllib2.urlopen(urllib2.Request(\n    sys.argv[2],\n    headers={'Metadata-Flavor': 'Google'})).read()\nparams = {'status': sys.argv[1],\n          'password': password}\nif sys.argv[3] != '':\n  params['deps_roll_link'] = sys.argv[3]\n  split = sys.argv[3].split('/')\n  split.insert(-2, 'api')\n  api_url = '/'.join(split)\n  issue_details = json.load(urllib2.urlopen(api_url))\n  old, new = shlex.split(issue_details['subject'])[-1].split(':')\n  params['last_roll_rev'] = full_hash(old)\n  params['curr_roll_rev'] = full_hash(new)\n\nurllib2.urlopen(urllib2.Request(\n    sys.argv[4],\n    urllib.urlencode(params)))\n",
      "Stopped",
      "http://metadata/computeMetadata/v1/project/attributes/skia_tree_status",
      "",
      "https://skia-tree-status.appspot.com/set_arb_status"
    ],
    "cwd": "[SLAVE_BUILD]/src/third_party/skia",
    "name": "update_status",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import json@@@",
      "@@@STEP_LOG_LINE@python.inline@import shlex@@@",
      "@@@STEP_LOG_LINE@python.inline@import subprocess@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@import urllib@@@",
      "@@@STEP_LOG_LINE@python.inline@import urllib2@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@def full_hash(short):@@@",
      "@@@STEP_LOG_LINE@python.inline@  return subprocess.check_output(['git', 'rev-parse', short]).rstrip()@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@password = urllib2.urlopen(urllib2.Request(@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.argv[2],@@@",
      "@@@STEP_LOG_LINE@python.inline@    headers={'Metadata-Flavor': 'Google'})).read()@@@",
      "@@@STEP_LOG_LINE@python.inline@params = {'status': sys.argv[1],@@@",
      "@@@STEP_LOG_LINE@python.inline@          'password': password}@@@",
      "@@@STEP_LOG_LINE@python.inline@if sys.argv[3] != '':@@@",
      "@@@STEP_LOG_LINE@python.inline@  params['deps_roll_link'] = sys.argv[3]@@@",
      "@@@STEP_LOG_LINE@python.inline@  split = sys.argv[3].split('/')@@@",
      "@@@STEP_LOG_LINE@python.inline@  split.insert(-2, 'api')@@@",
      "@@@STEP_LOG_LINE@python.inline@  api_url = '/'.join(split)@@@",
      "@@@STEP_LOG_LINE@python.inline@  issue_details = json.load(urllib2.urlopen(api_url))@@@",
      "@@@STEP_LOG_LINE@python.inline@  old, new = shlex.split(issue_details['subject'])[-1].split(':')@@@",
      "@@@STEP_LOG_LINE@python.inline@  params['last_roll_rev'] = full_hash(old)@@@",
      "@@@STEP_LOG_LINE@python.inline@  params['curr_roll_rev'] = full_hash(new)@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@urllib2.urlopen(urllib2.Request(@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.argv[4],@@@",
      "@@@STEP_LOG_LINE@python.inline@    urllib.urlencode(params)))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  }
]